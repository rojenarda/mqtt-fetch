AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31



Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "mqtt_message"
      AttributeDefinitions:
        - AttributeName: "name"
          AttributeType: "S"
        - AttributeName: "surname"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "name"
          KeyType: "HASH"
        - AttributeName: "surname"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 30
        WriteCapacityUnits: 30
    DependsOn:
      - SAMDynamoDBPolicy

  SAMDynamoDBPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: SAMDynamoDBPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "dynamodb:*"
            Resource: "*"
      Roles:
        - Ref: "SAMDynamoDBRole"

  SAMDynamoDBRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "dynamodb.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  MQTTFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: mqtt_received/
      Handler: mqtt_rec.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        MQTTMessageReceived:
          Type: IoTRule
          Properties:
            Sql: SELECT * FROM "sam/#"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "mqtt_message"

Outputs:
  MQTTFunction:
    Description: "MQTT Fetcher Lambda Function ARN"
    Value: !GetAtt MQTTFunction.Arn